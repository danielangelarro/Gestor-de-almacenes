name: Deploy with Ngrok

on:
 push:
    branches:
      - main

jobs:
 deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v2
      with:
        context: ./src/Api
        push: true
        tags: dukagin/backend:${{ github.sha }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v2
      with:
        context: ./src/App/gestoralmacen
        push: true
        tags: dukagin/frontend:${{ github.sha }}

    - name: Run Docker Compose
      run: |
        docker-compose up -d
    
    - name: Run database migrations
      run: |
        dotnet ef migrations add Production${{ github.sha }} --context GestorDeAlmacenesDBContext --output-dir Migrations/SqliteMigrations
        dotnet ef database update
      working-directory: ./ruta/de/tu/api

    - name: Run API
      run: |
        dotnet run &
      working-directory: ./src/Api
    

    - name: Run frontend
      run: |
        npm run serve &
      working-directory: ./src/App/gestoralmacen

    - name: Install Ngrok
      run: |
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip
        sudo mv ngrok /usr/local/bin

    - name: Start ngrok
      uses: luisboto/ngrok-tunnel-action@v0.1.7.2
      with:
          timeout: 1h
          port: 8080
          ngrok_authtoken: ${{ secrets.NGROK_AUTH_TOKEN }}
          tunnel_type: http
    
    - name: Install jq
      run: sudo apt-get install jq
    - name: Get ngrok URL
      run: |
        echo "NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')" >> $GITHUB_ENV

    - name: Print ngrok URL
      run: echo "${{ env.NGROK_URL }}"
    
    - name: Loop 
      run: |
          start=$(date +%s)
          while : ; do
            echo "Running..."
            sleep 1
            current=$(date +%s)
            elapsed=$((current - start))
            if ((elapsed > 300)); then
              break
            fi
          done